<!DOCTYPE html>
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>R2W case: <%= caseID; %></title>

<link rel="stylesheet" href="/V2/css/jquery-ui.min.css">
<link rel="stylesheet" href="/V2/css/styles.css">
<style>

    div.qr {
        text-align:center;
        float:right;
    }
    #qrcode img{
        width:128px;
        margin: 0 auto;
    }
    @media only screen and (max-width: 800px) {
        div.qr{
          display:none;
        }
    }

</style>

<script src="/V2/js/qrcode.min.js"></script>
<script src="/V2/js/jquery.min.js"></script>
<!-- <script src="https://code.jquery.com/jquery-1.12.4.js"></script> -->
<script src="/V2/js/R2W.js"></script>
<!-- <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script> -->
<script src="/V2/js/jquery-ui.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

</head>
<body>

<!-- Mobile Top Navigation Menu -->
<div class="block"></div>

<div class="mobile-nav">
    <a href="/" class="active pagelink" onclick="$('.panel').hide();$('#intro').show();">
<img src="/V2/images/R2Wlogo.svg" height="18px" align="top">
    &nbsp;
    R2W 
    </a>
    <!-- Navigation links  -->
    <div id="myLinks">
      <a href="/index#list_case" class="pagelink">List Editor's Cases</a>
      <a href="#case_attr" class="pagelink" onclick="setPage('#case_attr');">Case attributes</a>
      <a href="#case_event_page" class="pagelink" onclick="setPage('#case_event_page');">Case Events</a>
      <a href="#manage_evt" class="pagelink" onclick="setPage('#manage_evt');">Event details</a>
      <a href="#" class="pagelink" onclick="logout()">Logout</a>
    </div>
    <!-- "Hamburger menu" / "Bar icon" to toggle the navigation links -->
    <a href="javascript:applinks();" class="icon">
      <i class="fa fa-bars"></i>
    </a>
</div>

<div class="mobile-spacer">
<br><br>
</div>

<!-- Mobile Top Navigation Menu -->

<div class="paper">


<div id="qrcode" class="qr"></div>

<div class="panel3" id="intro">
  <h1>
  Case ID: <%= caseID; %>
  </h1>
  <b><%= user; %></b> view only
  <p>
  todo:
  <li>check if this case is assigned to the current user [WIP]</li>
  <li>if yes: then allow edit</li>
  <li>else: view only</li>
  <li>constrain fields with selected inputs [done, need to add admin edit]</li>
</div>

    <div class="panel3" id="case_attr">
        <h2>Case attributes</h2>
        <div id="case_attributes" class="FForm">Loading...</div>
    </div>

</div>

<div class="panel_wide" id="case_event_page">
  <div class="paper" style="clear:both;">
      <h2>Case events</h2>
  </div>

  <div id="case_events" style="width:100vw">
    <div class="paper">Initialising timeline...</div>
  </div>

  <div class="paper">
      <div id="case_events_debug" class="debug"></div>
  </div>
</div>




<script>
//caseID exists?
function check_case_exist(){
    var url = `/api/v1/cases/caseexists/<%= caseID; %>`;
    jqxhr = get(url,function (data){
        
        if(data == 0){
            alert("case not found");
            //switch to editor
            
        }else{
            get_case_by_id();
            get_case_event();
            makeQR();
        }
    });
}
//request json for a specific feature
function get_case_by_id(){
  var url = `/api/v1/cases/getcase/<%= caseID; %>`;
  jqxhr = get(url, function (data) {
    // $("#case_attributes_debug").html(JSON.stringify(data[0]._fields[0].properties));
    // {key:"phsVolunteer",label:"PHS member",type:"text",placeholder:"Internal identifier"},
    $("#case_attributes").html(makeform(data,[
        
        {key:"secretary",label:"Secretary",type:"text",placeholder:"Internal identifier"},
        //{key:"secretary_number",label:"Number",type:"number",placeholder:""},
        {key:"Location",label:"Ward name",type:"text",placeholder:"Ward name"},
        {key:"link",label:"Link to files",type:"link",placeholder:"Link to files and documents"},
        {key:"notes",label:"Notes",type:"textarea",placeholder:"Write additional comments here"},
        //{key:"dateLogged",label:"dateLogged",type:"hidden"},
        {key:"caseID",label:"caseID",type:"hidden"}
    ]));
    
    $(".submit_container").show();
    $("#case_attributes_debug").html(JSON.stringify(data));
  });
}
function get_case_event(){
  var url = `/api/v1/cases/getcaseeventV2/<%= caseID; %>`;
  jqxhr = get(url, function (data) {
    $("#case_events_debug").html(JSON.stringify(data));
  });
}
function makeQR(){
    var data = "view/case/<%= caseID; %>";
    new QRCode("qrcode", {text:data, width: 128, height: 128});
    console.log(data);
}
function update_case_record(){
    inputs = parseform("#case_attributes .editor");
    console.log(inputs);
    if (inputs.status){
        $("#update_case_status").html("updating");
        xhr = post('/api/v1/cases/updatecase/<%= caseID; %>',inputs.param,function(d){
            console.log(d);
            if ("status" in d){
                if(d.status){
                    $("#update_case_status").html(`updated`);
                }
            }else{
                $("#update_case_status").html("error");
            }
        })
        
    }
    
    
}

function load_timeline(){
    $.ajax({
        url: '/V2/timelineV2.html',
        cache: false,
        dataType: "html",
        success: function(data) {
            $("#case_events").html(data);
            
            get_timeline_data(0)
        }
    });
}
function get_timeline_data(update){
    var url = `/api/v1/cases/getcaseevent/<%= caseID; %>`;
    jqxhr = get(url, function (data) {
        tmp = process_data(data);
        if (tmp.nodes.length > 0){
            ctl.data = tmp;
            
            add_from_template(ctl.data); //experimental add templated nodes 
            ctl.update();
            if(!update){

                ctl.view_extent();
            }
        }else{
            //nothing found in the case itself, prompt user 
            tmpnodes = [ctl.data.nodes[0]];
            ctl.data.nodes = tmpnodes;
            ctl.data.nodes[0].properties.Label = "Placeholder: Click to add an event"
            ctl.data.nodes[0].draw.status = "template"
            ctl.data.edges = []
            ctl.update();
        }
    });
}

// on load
check_case_exist();
load_timeline();


// handle click on timeline items
var eventID = null;
var createlinkBln = 0;
function item_clicked(d){

    if(createlinkBln && eventID){
        
        if (eventID == d.id){
            alert("self-loop disabled");
            link_record_cancel()
            return false;
        }
        //need review below
        try{
        if (_.find(ctl.data.nodes,{id:eventID}).draw.startX > _.find(ctl.data.nodes,{id:d.id}).draw.startX){
            alert("past event depending on a future event disabled");
            link_record_cancel()
            return false;
        }}
        catch(e){console.warn(e)}
        
        get(`/api/v1/cases/eventevent/${eventID}/${d.id}`,function(d){
            if (d.length){
                $("#prompt").html("link created");
            }else{
                $("#prompt").html("link error");
            }
            get_timeline_data(1);

        })
        link_record_cancel()
        return false;
    }
    
    
    eventID = d.id;
    $("#update_event_status").html("");
    
    var data = d.properties;
    var manage_form = makeform(data,[
        {key:"Label",label:"Label",type:"select",candidate:availableTags},
        {key:"Completed",label:"Completed",type:"boolean"},
        {key:"eventStartDate",label:"Start date",type:"date"},
        {key:"eventDueDate",label:"Due date",type:"date"},
        {key:"eventCompletedDate",label:"Completed date",type:"date"},
        {key:"Expected_Duration",label:"Expected duration",type:"number"},
        {key:"Notes",label:"Notes",type:"textarea",placeholder:"Write additional comments here"}
    ])
    $("#manage_event").html(manage_form);
    
    $(".manage_event_btn").show()
    
    
    if (d.draw.status == "template"){
        $("#btn_del").hide()
        $("#btn_link").hide()
    }else{
        $("#btn_del").show()
        $("#btn_link").show()
    }
    //////////////////////////////////////
    //set visibility based on content in client
    //var completed = $("#manage_event #Completed").val();
    function completed_change(){
        var completed = $("#manage_event #Completed").is(":checked");
        if (!completed){
             $("#manage_event .row-eventDueDate").show();
             $("#manage_event .row-Expected_Duration").show();
             $("#manage_event .row-eventCompletedDate").hide();
        }else{
             $("#manage_event .row-eventDueDate").hide();
             $("#manage_event .row-Expected_Duration").hide();
             $("#manage_event .row-eventCompletedDate").show();
        }
    }
    completed_change();
    $("#manage_event #Completed").on('change', function(d){
        completed_change();
    })
    //update due date if expected duration changes
    function modify_due_date(){
        newdate = addDays(get_date_from_str($("#manage_event #eventStartDate").val()), Number($("#manage_event #Expected_Duration").val()))
         $("#manage_event #eventDueDate").val(formatDate(newdate))
    }
    $("#manage_event #Expected_Duration").on('change', function(d){
        modify_due_date()
        
    })
    
    //check if completed date or due date is later than start date
    function check_completed_date(){
        var startdate = get_date_from_str($("#manage_event #eventStartDate").val())
        var completedate = get_date_from_str($("#manage_event #eventCompletedDate").val())
        if (completedate < startdate){
            completedate = startdate;
        }
        $("#manage_event #eventCompletedDate").val(formatDate(completedate))
    }
    $("#manage_event #eventCompletedDate").on('change', function(d){
        check_completed_date()
    })
    
    //update expected duration when due date changes
    function modify_expected_duration(){
        days = (get_date_from_str($("#manage_event #eventDueDate").val())-get_date_from_str($("#manage_event  #eventStartDate").val()))/86400000
         $("#manage_event #Expected_Duration").val(days);
    }
    $("#manage_event #eventDueDate").on('change', function(d){
        modify_expected_duration()
    })
    //update due date if startdate changes, based on expected duration
    $("#manage_event #eventStartDate").on('change', function(d){
        modify_due_date()
    })
    
    //////////////////////////////////////
    scrollTo("#event");
    setPage("#manager_evt");
    
    init_auto_complete();
}

var availableTags = [
      "Awareness", "Nal Committee Formation", "Secretary Selection", "Document Collection", "Signature / thumbprints on the documents", "Create Settlement Map", "Filling Online form", "LP Authorisation and signature on documents ", "Challan ", "Photocopy of the File", "Dispatch orginal File", "Visit Confirmation by JE", "Response Letter_JE", "JE Visit", "Document Verification", "JE Report", "MS Site Visit", "MS Report to JE", "File passed to AE for approval of P form", "P Form Conditional ", "P Form", "Condition: Individual tap water permission", "Condition: ", "P Form + C Form LP signature", "Road Permision ", "Challan for Road Permission", "Challan for Road Permission Photocopy", "AE, SE, JE Maintenace signature - Road permission", "Challan for Road Permission Photocopy attach to PHS file", "Deposit of tap connection to be paid", "Photo copy of the Deposit reciept to be attached to the PHS file", "Original Reciept to be handed over to Nal Committee Secretary ", "C Form Nal Secretary signature", "SEWW signature on C Form", "HC BIlling signature on C Form", "Inform Nal committee for Meter connection", "Meter card to be signed by SEWW", "Form No. 32 to be filled and attached to the original file", "File certification by AE and SEWW", "Work order by JE Water Chowki", "JE to sign the file in Water Chowki", "Nal Committee to be ready with pipes and plumber", "Trench - Gang from water chowki", "Connection installed"
    ];
 

function init_auto_complete(){

    //todo: load this from templateA
    
    $("#manage_event #Label").autocomplete({
      source: availableTags
    });
}


function update_event_record(){
    if (eventID){
        if (!isNaN(eventID)){
        
            inputs = parseform("#manage_event .editor");
            console.log(inputs);
            if (inputs.status){
                $("#update_event_status").html("updating");
                xhr = post('/api/v1/cases/updateevent/'+eventID,inputs.param,function(d){
                    console.log(d);
                    if ("status" in d){
                        if(d.status){
                            $("#update_event_status").html(`updated`);
                            get_timeline_data(1);
                        }
                    }else{
                        $("#update_event_status").html("error");
                    }
                })
                
            }
        }
        else{
            //in timeline the eventID for placeholder are string e.g. X1, X2
            //here we will use the form to add a new event
            console.log("add event")
            inputs = parseform("#manage_event .editor");
            if (inputs.status){
            
                //Note: this adds the new event only, does not deal with Event-Event connection
                //POST api/v1/cases/linkevents {startNodeId,endNodeId}
                
                $("#update_event_status").html("adding");
                //find previous id
                inEdges = _.filter(ctl.data.edges, {endNodeId:eventID})
                var prevID = "";
                if (inEdges.length){
                    prevEventId = inEdges[0].startNodeId
                    if (!isNaN(prevEventId)){
                        prevID = "/"+prevEventId
                    }
                }
                xhr = post('/api/v1/cases/addevent/<%= caseID; %>'+prevID,inputs.param,function(d){
                    console.log(d);
                    if ("status" in d){
                        if(d.status){
                            $("#update_event_status").html(`updated`);
                            get_timeline_data(1); //update ctl
                            
                            $("#manage_event").html("Select an item in the timeline to add or edit");
                            $(".manage_event_btn").hide();
                        }
                    }else{
                        $("#update_event_status").html("error");
                    }
                })
                
                
                
            }
        }
    }
    
}



</script>



<div class="paper" id="manage_evt">
    <h2 id="event">Event details</h2>
    <div id="manage_event" class="FForm">Select an item in the timeline to view details</div>

</div>

    
    
<br>
<br>
<br>

<script>
function link_record_init(){
    //show prompt
    $("#prompt").html(`Select an Event in the timeline dependent on the this Event <button onclick="link_record_cancel()">cancel</button>`);
    //set flag
    createlinkBln = 1;
    $('#btn_link').hide();

}
function link_record_cancel(){
    createlinkBln=0;
    $('#btn_link').show();
    $("#prompt").html("");
}


function delete_event_record(){

    if (confirm('Delete?')) {
        delete_event(eventID);
        
        //hide manage event
        $("#manage_event").html("Select an item in the timeline to add or edit");
        $(".manage_event_btn").hide();
    } 
    
}

function delete_event(id){
    if (!isNaN(id)){
        var url = `/api/v1/cases/event/${id}`;
        jqxhr = del(url,{},function(d){get_timeline_data(0);console.log(d)});
    }
}
</script>

</body>
</html>
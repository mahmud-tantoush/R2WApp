<!DOCTYPE html>
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>R2W case: <%= caseID; %></title>

<link rel="stylesheet" href="/V2/css/styles.css">
<style>
    div.qr {
        text-align:center;
        float:right;
    }
    #qrcode img{
        width:128px;
        margin: 0 auto;
    }
    @media only screen and (max-width: 800px) {
        div.qr{
          display:none;
        }
    }
</style>

<script src="/V2/js/qrcode.min.js"></script>
<script src="/V2/js/jquery.min.js"></script>
<script src="/V2/js/R2W.js"></script>

</head>
<body>

<div class="paper">

<h1>

<div id="qrcode" class="qr"></div>
R2W /  
<a href="/V2/listall.html">Index</a>
/ 
Case ID: <%= caseID; %>



</h1>

    <div class="panel2">
        <h2>Case attributes</h2>
        <div id="case_attributes" class="FForm">Loading...</div>
        
        <div class="submit_container">
            <span id="update_case_status"></span>
            <button onclick="update_case_record()">Update record</button>
        </div>
        
        <div id="case_attributes_debug" class="debug"></div>
    </div>

</div>

<div class="paper" style="clear:both;">

    <h2>Case events</h2>

</div>

<div id="case_events"><div class="paper">Initialising timeline...</div></div>

<div class="paper">

    <div id="case_events_debug" class="debug"></div>

</div>

<script>
//caseID exists?
function check_case_exist(){
    var url = `/api/v1/cases/caseexists/<%= caseID; %>`;
    jqxhr = get(url,function (data){
        
        if(data == 0){
            alert("case not found");
            //switch to editor
            
        }else{
            get_case_by_id();
            get_case_event();
            makeQR();
        }
    });
}
//request json for a specific feature
function get_case_by_id(){
  var url = `/api/v1/cases/getcase/<%= caseID; %>`;
  jqxhr = get(url, function (data) {
    // $("#case_attributes_debug").html(JSON.stringify(data[0]._fields[0].properties));
    
    $("#case_attributes").html(makeform(data,[
        {key:"phsVolunteer",label:"PHS member",type:"text",placeholder:"Internal identifier"},
        {key:"secretary",label:"Secretary",type:"text",placeholder:"Internal identifier"},
        {key:"Location",label:"Ward name",type:"text",placeholder:"Municipality"},
        {key:"notes",label:"Notes",type:"textarea",placeholder:"Write additional comments here"},
        //{key:"dateLogged",label:"dateLogged",type:"hidden"},
        {key:"caseID",label:"caseID",type:"hidden"}
    ]));
    
    $(".submit_container").show();
    $("#case_attributes_debug").html(JSON.stringify(data));
  });
}
function get_case_event(){
  var url = `/api/v1/cases/getcaseevent/<%= caseID; %>`;
  jqxhr = get(url, function (data) {
    $("#case_events_debug").html(JSON.stringify(data));
  });
}
function makeQR(){
    var data = "view/case/<%= caseID; %>";
    new QRCode("qrcode", {text:data, width: 128, height: 128});
    console.log(data);
}
function update_case_record(){
    inputs = parseform("#case_attributes .editor");
    console.log(inputs);
    if (inputs.status){
        $("#update_case_status").html("updating");
        xhr = post('/api/v1/cases/updatecase/<%= caseID; %>',inputs.param,function(d){
            console.log(d);
            if ("status" in d){
                if(d.status){
                    $("#update_case_status").html(`updated`);
                }
            }else{
                $("#update_case_status").html("error");
            }
        })
        
    }
    
    
}

function load_timeline(){
    $.ajax({
        url: '/V2/timelineV2.html',
        cache: false,
        dataType: "html",
        success: function(data) {
            $("#case_events").html(data);
            
            get_timeline_data(0)
        }
    });
}
function get_timeline_data(update){
    var url = `/api/v1/cases/getcaseevent/<%= caseID; %>`;
    jqxhr = get(url, function (data) {
        tmp = process_data(data);
        if (tmp.nodes.length > 0){
            ctl.data = tmp;
            
            add_from_template(ctl.data); //experimental add templated nodes 
            ctl.update();
            if(!update){

                ctl.view_extent();
            }
        }else{
            //nothing found in the case itself, prompt user 
            tmpnodes = [ctl.data.nodes[0]];
            ctl.data.nodes = tmpnodes;
            ctl.data.nodes[0].properties.Label = "Placeholder: Click to add an event"
            ctl.data.edges = []
            ctl.update();
        }
    });
}

// on load
check_case_exist();
load_timeline();


// handle click on timeline items
var eventID = null;

function item_clicked(d){
    eventID = d.id;

    var data = d.properties;
    var manage_form = makeform(data,[
        {key:"Label",label:"Label",type:"text"},
        {key:"Completed",label:"Completed",type:"boolean"},
        {key:"eventStartDate",label:"Start date",type:"date"},
        {key:"eventDueDate",label:"Due date",type:"date"},
        {key:"eventCompletedDate",label:"Completed date",type:"date"},
        {key:"Expected_Duration",label:"Expected duration",type:"number"},
        {key:"Notes",label:"Notes",type:"textarea",placeholder:"Write additional comments here"}
    ])
    $("#manage_event").html(manage_form);
    
    $("#manage_event_btn").show()
    
    //////////////////////////////////////
    //set visibility based on content in client
    //var completed = $("#manage_event #Completed").val();
    function check_completed(){
         var completed = $("#manage_event #Completed").is(":checked");
        if (!completed){
             $("#manage_event .row-eventDueDate").show();
             $("#manage_event .row-Expected_Duration").show();
             $("#manage_event .row-eventCompletedDate").hide();
        }else{
             $("#manage_event .row-eventDueDate").hide();
             $("#manage_event .row-Expected_Duration").hide();
             $("#manage_event .row-eventCompletedDate").show();
        }
    }
    check_completed();
    $("#manage_event #Completed").on('change', function(d){
        check_completed();
    })
    //update due date if expected duration changes
    function modify_due_date(){
        newdate = addDays(get_date_from_str($("#manage_event #eventStartDate").val()), Number($("#manage_event #Expected_Duration").val()))
         $("#manage_event #eventDueDate").val(formatDate(newdate))
    }
    $("#manage_event #Expected_Duration").on('change', function(d){
        modify_due_date()
    })
    //update expected duration when due date changes
    function modify_expected_duration(){
        days = (get_date_from_str($("#manage_event #eventDueDate").val())-get_date_from_str($("#manage_event  #eventStartDate").val()))/86400000
         $("#manage_event #Expected_Duration").val(days);
    }
    $("#manage_event #eventDueDate").on('change', function(d){
        modify_expected_duration()
    })
    //update due date if startdate changes, based on expected duration
    $("#manage_event #eventStartDate").on('change', function(d){
        modify_due_date()
    })
    
    //////////////////////////////////////
    scrollTo("#event");
    
    
}

function update_event_record(){
    if (eventID){
        if (!isNaN(eventID)){
        
            inputs = parseform("#manage_event .editor");
            console.log(inputs);
            if (inputs.status){
                $("#update_event_status").html("updating");
                xhr = post('/api/v1/cases/updateevent/'+eventID,inputs.param,function(d){
                    console.log(d);
                    if ("status" in d){
                        if(d.status){
                            $("#update_event_status").html(`updated`);
                            get_timeline_data(1);
                        }
                    }else{
                        $("#update_event_status").html("error");
                    }
                })
                
            }
        }
        else{
            //in timeline the eventID for placeholder are string e.g. X1, X2
            //here we will use the form to add a new event
            console.log("add event")
            inputs = parseform("#manage_event .editor");
            if (inputs.status){
            
                //Note: this adds the new event only, does not deal with Event-Event connection
                //POST api/v1/cases/linkevents {startNodeId,endNodeId}
                
                $("#update_event_status").html("adding");
                //find previous id
                inEdges = _.filter(ctl.data.edges, {endNodeId:eventID})
                var prevID = "";
                if (inEdges.length){
                    prevEventId = inEdges[0].startNodeId
                    if (!isNaN(prevEventId)){
                        prevID = "/"+prevEventId
                    }
                }
                xhr = post('/api/v1/cases/addevent/<%= caseID; %>'+prevID,inputs.param,function(d){
                    console.log(d);
                    if ("status" in d){
                        if(d.status){
                            $("#update_event_status").html(`updated`);
                            get_timeline_data(1); //update ctl
                            
                            $("#manage_event").html("Select an item in the timeline to add or edit");
                            $("#manage_event_btn").hide();
                        }
                    }else{
                        $("#update_event_status").html("error");
                    }
                })
                
                
                
            }
        }
    }
    
}



</script>



<div class="paper">
    <h2 id="event">Manage event</h2>
    <div id="manage_event" class="FForm">Select an item in the timeline to add or edit</div>
    <div id="manage_event_btn" style="display:none;text-align:right">
        <span id="update_event_status"></span>
        <button onclick="update_event_record()">Update record</button>
    </div>


</div>

<br>
<br>
<br>


</body>
</html>